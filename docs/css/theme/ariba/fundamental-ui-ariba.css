/*!
* Fundamental-UI-Theme-Ariba v1.1.0
* Copyright (c) 2018 SAP SE or an SAP affiliate company.
* Licensed under Apache License 2.0 (https://github.com/SAP/Fundamental/blob/master/LICENSE)
*/
input[type=text], input[type=password], input[type=email], input[type=url], input[type=search], input[type=tel], input[type=number], input[type=date] {
  direction: inherit;
  line-height: 1.14286rem;
  border-color: #ACD4ED; }
  input[type=text]:active, input[type=text]:focus, input[type=text]:hover, input[type=password]:active, input[type=password]:focus, input[type=password]:hover, input[type=email]:active, input[type=email]:focus, input[type=email]:hover, input[type=url]:active, input[type=url]:focus, input[type=url]:hover, input[type=search]:active, input[type=search]:focus, input[type=search]:hover, input[type=tel]:active, input[type=tel]:focus, input[type=tel]:hover, input[type=number]:active, input[type=number]:focus, input[type=number]:hover, input[type=date]:active, input[type=date]:focus, input[type=date]:hover {
    border-color: #0a6ed1; }
  input[type=text][disabled], input[type=text][aria-disabled="true"], input[type=text].is-disabled, input[type=password][disabled], input[type=password][aria-disabled="true"], input[type=password].is-disabled, input[type=email][disabled], input[type=email][aria-disabled="true"], input[type=email].is-disabled, input[type=url][disabled], input[type=url][aria-disabled="true"], input[type=url].is-disabled, input[type=search][disabled], input[type=search][aria-disabled="true"], input[type=search].is-disabled, input[type=tel][disabled], input[type=tel][aria-disabled="true"], input[type=tel].is-disabled, input[type=number][disabled], input[type=number][aria-disabled="true"], input[type=number].is-disabled, input[type=date][disabled], input[type=date][aria-disabled="true"], input[type=date].is-disabled {
    border-color: transparent;
    background-color: #F7F7F8; }
  input[type=text].--l, input[type=password].--l, input[type=email].--l, input[type=url].--l, input[type=search].--l, input[type=tel].--l, input[type=number].--l, input[type=date].--l {
    height: 44px;
    font-size: 16px;
    line-height: 1.28571rem; }

input[type=radio], input[type=checkbox] {
  height: 20px;
  width: 20px;
  border-color: #ACD4ED; }
  input[type=radio]:checked, input[type=checkbox]:checked {
    border-color: #0a6ed1;
    background-color: #0a6ed1; }
  input[type=radio][disabled], input[type=radio][aria-disabled="true"], input[type=radio].is-disabled, input[type=checkbox][disabled], input[type=checkbox][aria-disabled="true"], input[type=checkbox].is-disabled {
    border-color: #939598;
    background-color: #F7F7F8; }
  input[type=radio].--s, input[type=checkbox].--s {
    min-width: 18px;
    height: 18px;
    width: 18px; }
  input[type=radio].--l, input[type=checkbox].--l {
    height: 24px;
    width: 24px; }

input[type="checkbox"][disabled]::before, input[type="checkbox"][aria-disabled="true"]::before, input[type="checkbox"].is-disabled::before {
  border-color: #939598; }

input[type="radio"]:checked {
  background-color: #ffffff;
  border-color: #ACD4ED; }
  input[type="radio"]:checked::after {
    background-color: #0a6ed1; }
  input[type="radio"]:checked[disabled]::after, input[type="radio"]:checked[aria-disabled="true"]::after, input[type="radio"]:checked.is-disabled::after {
    background-color: #939598; }

input[type="radio"]:active, input[type="radio"]:focus {
  border-color: #0a6ed1; }

input[type="radio"].--s::after {
  width: 6px;
  height: 6px;
  top: calc(50% - (6px/2));
  left: calc(50% - (6px/2)); }

input[type="radio"].--l::after {
  width: 12px;
  height: 12px;
  top: calc(50% - (12px/2));
  left: calc(50% - (12px/2)); }

/*!
.fd-button+( (--small | --large), --icon, --text, --link, --action-bar)+( (.is-disabled | [aria-disabled=true]) | (.is-selected | [aria-selected=true] | (.is-pressed | [aria-pressed=true]))
*/
.fd-button, [class*="fd-button--"] {
  font-size: 1rem;
  line-height: 1.42857;
  font-weight: 400;
  border-radius: 3px;
  padding-left: 24px;
  padding-right: 24px; }

.fd-button[class*="ariba-icon"]::before, [class*="fd-button--"][class*="ariba-icon"]::before {
  margin-top: -6px; }

.fd-button.fd-button--round, [class*="fd-button--"].fd-button--round {
  font-size: 1.14286rem;
  line-height: 1.25;
  font-weight: 400;
  border-radius: 50%;
  padding: 0px !important;
  height: 48px;
  max-height: 48px;
  min-width: 48px; }

.fd-button.--icon-only, [class*="fd-button--"].--icon-only {
  padding-left: 11px;
  padding-right: 11px; }

.fd-button--main, .fd-button--action-bar {
  font-weight: 700; }

.fd-button--negative {
  border-color: #CC0000; }
  .fd-button--negative:active, .fd-button--negative.is-active, .fd-button--negative[aria-selected="true"], .fd-button--negative.is-selected, .fd-button--negative[aria-pressed="true"], .fd-button--negative.is-pressed {
    background-color: #990000;
    border-color: #990000; }

.fd-button--compact {
  font-size: 1rem;
  line-height: 1.42857;
  font-weight: 400;
  height: 32px;
  max-height: 32px;
  min-width: 32px;
  padding-left: 20px;
  padding-right: 20px;
  border-radius: 3px; }
  .fd-button--compact::before {
    font-size: 1.14286rem;
    line-height: 1; }
  .fd-button--compact::after {
    font-size: 1.14286rem;
    line-height: 1; }

.fd-button--compact.--icon-only {
  padding-left: 9px;
  padding-right: 9px; }

.fd-button--xs {
  font-size: 0.85714rem;
  line-height: 1.33333;
  font-weight: 400;
  height: 24px;
  max-height: 24px;
  min-width: 24px;
  padding-left: 12px;
  padding-right: 12px;
  border-radius: 2px; }
  .fd-button--xs::before {
    font-size: 0.85714rem;
    line-height: 1; }
  .fd-button--xs::after {
    font-size: 0.85714rem;
    line-height: 1; }

.fd-button--xs.fd-button--round {
  font-size: 1rem;
  line-height: 1.42857;
  font-weight: 400;
  height: 36px;
  max-height: 36px;
  min-width: 36px; }

.fd-button--xs.--icon-only {
  padding-left: 6px;
  padding-right: 6px; }

.fd-button--s {
  font-size: 1rem;
  line-height: 1.42857;
  font-weight: 400;
  height: 28px;
  max-height: 28px;
  min-width: 28px;
  padding-left: 16px;
  padding-right: 16px;
  border-radius: 2px; }
  .fd-button--s::before {
    font-size: 1.14286rem;
    line-height: 1; }
  .fd-button--s::after {
    font-size: 1.14286rem;
    line-height: 1; }

.fd-button--s.fd-button--round {
  font-size: 1.14286rem;
  line-height: 1.25;
  font-weight: 400;
  height: 44px;
  max-height: 44px;
  min-width: 44px; }

.fd-button--s.--icon-only {
  padding-left: 7px;
  padding-right: 7px; }

.fd-button--l {
  font-size: 1.14286rem;
  line-height: 1.25;
  font-weight: 400;
  height: 40px;
  max-height: 40px;
  min-width: 40px;
  padding-left: 28px;
  padding-right: 28px;
  border-radius: 3px; }
  .fd-button--l::before {
    font-size: 1.42857rem;
    line-height: 1; }
  .fd-button--l::after {
    font-size: 1.42857rem;
    line-height: 1; }

.fd-button--l.fd-button--round {
  font-size: 1.28571rem;
  line-height: 1.33333;
  font-weight: 400;
  height: 52px;
  max-height: 52px;
  min-width: 52px; }

.fd-button--l.--icon-only {
  padding-left: 12px;
  padding-right: 12px; }

.fd-button--xl {
  font-size: 1.14286rem;
  line-height: 1.25;
  font-weight: 400;
  height: 44px;
  max-height: 44px;
  min-width: 44px;
  padding-left: 32px;
  padding-right: 32px;
  border-radius: 3px; }
  .fd-button--xl::before {
    font-size: 1.71429rem;
    line-height: 1; }
  .fd-button--xl::after {
    font-size: 1.71429rem;
    line-height: 1; }

.fd-button--xl.fd-button--round {
  font-size: 1.42857rem;
  line-height: 1.3;
  font-weight: 400;
  height: 56px;
  max-height: 56px;
  min-width: 56px; }

.fd-button--xl.--icon-only {
  padding-left: 14px;
  padding-right: 14px; }

[dir='rtl'] .fd-button::before,
[dir='rtl'] [class*="fd-button--"]::before {
  margin-left: 8px;
  margin-right: 0px; }

[dir='rtl'] .fd-button.--icon-only::before,
[dir='rtl'] [class*="fd-button--"].--icon-only::before,
[dir='rtl'] .fd-button--round::before {
  margin-left: 0px; }

/*!
.fd-form
    .fd-form__set?
        .fd-form__legend(.is-required)
        .fd-form__group?
            .fd-form__item+(--check, --inline)
                .fd-form__label(.is-required)
                .fd-form__control
            .fd-form__message(--help, --error, --warning)

*/
.fd-form__set .fd-form__message {
  margin-top: 0; }

.fd-form__item.--warning {
  color: #f59518; }
  .fd-form__item.--warning .fd-form__control {
    border-color: #f59518; }

.fd-form__item.--success {
  color: #359c46; }
  .fd-form__item.--success .fd-form__control {
    border-color: #359c46; }

.fd-form__control {
  min-width: 16px; }
  .fd-form__control.is-invalid {
    border-color: #CC0000;
    padding-right: 30px; }
  .fd-form__control.is-warning {
    border-color: #f59518;
    padding-right: 30px; }

.fd-form__message {
  color: inherit;
  padding: 1px 0;
  font-size: 12px;
  height: 12px; }
  .fd-form__message::before {
    font-family: "SAP-icons";
    font-style: normal;
    font-weight: normal;
    text-align: center;
    display: inline-block;
    text-decoration: inherit;
    text-transform: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    speak: none; }
  .fd-form__message::before {
    background-color: transparent !important;
    font-family: "Ariba-icons";
    width: 18px;
    height: 18px;
    color: inherit;
    border-radius: 50%;
    text-align: center;
    line-height: 18px;
    font-size: 20px;
    border: 0px;
    margin-top: -36px;
    float: right;
    position: relative;
    margin-right: 6px; }
  .fd-form__message--warning, .fd-form__message--error, .fd-form__message--help {
    padding-left: 0PX; }
    .fd-form__message--warning::before, .fd-form__message--error::before, .fd-form__message--help::before {
      left: 0;
      top: 7px; }
  .fd-form__message--help {
    color: #32363a; }
    .fd-form__message--help::before {
      content: "?"; }
  .fd-form__message--warning {
    color: #f59518; }
    .fd-form__message--warning::before {
      content: "\eA9d"; }
  .fd-form__message--error {
    color: #CC0000; }
    .fd-form__message--error::before {
      content: "\eA9c"; }

[dir='rtl'] .fd-form__group .fd-form__item {
  margin-left: 32px;
  margin-right: 0px; }

[dir='rtl'] .fd-form__item--check .fd-form__control {
  margin-left: 8px;
  margin-right: 0px; }
  [dir='rtl'] .fd-form__item--check .fd-form__control[type='checkbox'], [dir='rtl'] .fd-form__item--check .fd-form__control[type='radio'] {
    float: right; }

[dir='rtl'] .fd-form__item--inline {
  float: right; }

[dir='rtl'] .fd-form__control.is-invalid {
  padding-right: 12px;
  padding-left: 30px; }

[dir='rtl'] .fd-form__control.is-warning {
  padding-right: 12px;
  padding-left: 30px; }

[dir='rtl'] .fd-form__message::before {
  float: left;
  margin-left: 6px; }

/*!
.fd-input-group+(--inline)
    .fd-input-group__addon+()
        .fd-input-group__button
*/
.fd-input-group.--l {
  font-size: 16px;
  max-height: 44px; }

.fd-input-group__addon {
  border: 0px;
  padding: 0px;
  background-color: transparent;
  margin: 0px 0px 0px -40px;
  color: #939598;
  text-align: center;
  text-align: -webkit-center; }
  .fd-input-group__addon--button {
    border: 1px solid #ACD4ED;
    margin: 0px 0px 0px -50px; }
  .fd-input-group__addon--before {
    margin: 0px -40px 0px 0px;
    padding-left: 5px;
    z-index: 1;
    min-width: 40px;
    text-align: center; }
  .fd-input-group__addon--after {
    min-width: 40px; }

.fd-input-group--before input[type=text], .fd-input-group--before input[type=password], .fd-input-group--before input[type=email], .fd-input-group--before input[type=url], .fd-input-group--before input[type=search], .fd-input-group--before input[type=tel], .fd-input-group--before input[type=number], .fd-input-group--before input[type=date] {
  border-top-left-radius: 4px;
  border-bottom-left-radius: 4px;
  padding-left: 45px; }

.fd-input-group--after input[type=text], .fd-input-group--after input[type=password], .fd-input-group--after input[type=email], .fd-input-group--after input[type=url], .fd-input-group--after input[type=search], .fd-input-group--after input[type=tel], .fd-input-group--after input[type=number], .fd-input-group--after input[type=date] {
  border-top-right-radius: 4px;
  border-bottom-right-radius: 4px;
  padding-right: 45px; }

.fd-input-group--before.--after input[type=text], .fd-input-group--before.--after input[type=password], .fd-input-group--before.--after input[type=email], .fd-input-group--before.--after input[type=url], .fd-input-group--before.--after input[type=search], .fd-input-group--before.--after input[type=tel], .fd-input-group--before.--after input[type=number], .fd-input-group--before.--after input[type=date] {
  padding-left: 45px;
  padding-right: 45px; }

[dir='rtl'] .fd-input-group__addon {
  margin: 0px -40px 0px 0px; }
  [dir='rtl'] .fd-input-group__addon--before {
    margin: 0px 0px 0px -40px;
    padding-left: 1px;
    padding-right: 8px; }

[dir='rtl'] .fd-input-group--before .fd-form__control {
  padding-right: 45px;
  padding-left: 12px; }

[dir='rtl'] .fd-input-group--after .fd-form__control {
  padding-left: 45px;
  padding-right: 12px; }

[dir='rtl'] .fd-input-group--before.--after .fd-form__control {
  padding-left: 45px;
  padding-right: 45px; }

.fd-toggle {
  height: 25.6px; }
  .fd-toggle__switch {
    -webkit-box-shadow: none;
            box-shadow: none; }
  .fd-toggle input {
    top: 5.11719px;
    width: 100%;
    height: 71%; }
    .fd-toggle input:checked {
      background-color: #ACD4ED; }
      .fd-toggle input:checked + .fd-toggle__switch {
        background: #0a6ed1;
        border-color: #0a6ed1; }
  .fd-toggle--xxs {
    height: 14px;
    width: 26px; }
    .fd-toggle--xxs .fd-toggle__switch {
      height: 16px;
      width: 16px; }
    .fd-toggle--xxs input {
      top: 3px;
      border-radius: 8px; }
      .fd-toggle--xxs input:checked + .fd-toggle__switch {
        left: calc(100% - 16px); }
  .fd-toggle--xs {
    height: 12.2px;
    width: 34px; }
    .fd-toggle--xs input {
      top: 4.57031px; }
  .fd-toggle--s {
    height: 17.8px;
    width: 40px; }
    .fd-toggle--s input {
      top: 4.78125px; }
  .fd-toggle--l {
    height: 30px;
    width: 54px; }
    .fd-toggle--l input {
      top: 5.11719px; }

[dir='rtl'] .fd-toggle input:checked + .fd-toggle__switch {
  right: calc(100% - 25.6px); }

[dir='rtl'] .fd-toggle__switch {
  right: 0;
  -webkit-transition: right 0.125s ease-in;
  transition: right 0.125s ease-in; }

[dir='rtl'] .fd-toggle--xxs input:checked + .fd-toggle__switch {
  right: calc(100% - 16px); }

[dir='rtl'] .fd-toggle--xs input:checked + .fd-toggle__switch {
  right: calc(100% - 14.2px); }

[dir='rtl'] .fd-toggle--s input:checked + .fd-toggle__switch {
  right: calc(100% - 19.8px); }

[dir='rtl'] .fd-toggle--l input:checked + .fd-toggle__switch {
  right: calc(100% - 32px); }
/*!
.fd-spinner-2+(.is-hidden|[aria-hidden=true])

<div class="fd-spinner-2">
	<div></div>
</div>

/*!
 * Load Awesome v1.1.0 (http://github.danielcardoso.net/load-awesome/)
 * Copyright 2015 Daniel Cardoso <@DanielCardoso>
 * Licensed under MIT
 */
.fd-spinner-2 {
  position: relative;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  display: block;
  font-size: 0;
  color: #0a6ed1;
  width: 48px;
  height: 48px;
  margin: 0 auto; }
  .fd-spinner-2.is-hidden, .fd-spinner-2[aria-hidden="true"] {
    display: none; }
  .fd-spinner-2 > div {
    position: relative;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    display: inline-block;
    float: none;
    border: 4px solid currentColor;
    width: 48px;
    height: 48px;
    background: transparent;
    border-bottom-color: transparent;
    border-radius: 100%;
    -webkit-animation: --rotate 1s linear infinite;
    animation: --rotate 1s linear infinite; }
  .fd-spinner-2.--light {
    color: #f5f5f5; }
  .fd-spinner-2.--s {
    width: 24px;
    height: 24px; }
    .fd-spinner-2.--s > div {
      width: 24px;
      height: 24px;
      border-width: 2px; }
  .fd-spinner-2.--l {
    width: 72px;
    height: 72px; }
    .fd-spinner-2.--l > div {
      width: 72px;
      height: 72px;
      border-width: 6px; }
  button .fd-spinner-2 {
    color: inherit; }
  .is-busy .fd-spinner-2,
  [aria-busy="true"] .fd-spinner-2 {
    position: absolute;
    z-index: 2;
    left: calc(50% - 48px/2);
    top: calc(50% - 48px/2); }

/*
 * Animation
 */
@-webkit-keyframes --rotate {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  50% {
    -webkit-transform: rotate(180deg);
    transform: rotate(180deg); }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg); } }

@keyframes --rotate {
  0% {
    -webkit-transform: rotate(0deg);
    transform: rotate(0deg); }
  50% {
    -webkit-transform: rotate(180deg);
    transform: rotate(180deg); }
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg); } }

/*!
.fd-button-group+()
    .fd-button
*/
.fd-button-group {
  display: -webkit-inline-box;
  display: -ms-inline-flexbox;
  display: inline-flex; }
  .fd-button-group.--split [class*="fd-button--"] {
    padding-left: 16px;
    padding-right: 16px;
    color: #ffffff;
    background-color: #0a6ed1;
    border-color: #0a6ed1;
    font-weight: 700;
    font-size: inherit;
    border-top-right-radius: 0;
    border-bottom-right-radius: 0; }
    .fd-button-group.--split [class*="fd-button--"]:hover {
      background-color: #085caf;
      border-color: #085caf;
      color: #ffffff;
      -webkit-box-shadow: none;
              box-shadow: none; }
    .fd-button-group.--split [class*="fd-button--"].--more {
      border-left: 1px solid #fff;
      padding-left: 12px;
      padding-right: 12px;
      border-top-right-radius: 3px;
      border-bottom-right-radius: 3px; }
      .fd-button-group.--split [class*="fd-button--"].--more::before {
        font-size: inherit;
        font-family: "Ariba-icons";
        font-style: normal;
        font-weight: 700;
        text-align: center;
        display: inline-block;
        text-decoration: inherit;
        text-transform: none;
        text-rendering: optimizeLegibility;
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
        speak: none;
        content: "\eB16";
        margin-top: -5px; }
  .fd-button-group.--split .fd-popover__body {
    min-width: inherit;
    margin-top: 35px;
    margin-left: -1px;
    font-size: inherit; }
    .fd-button-group.--split .fd-popover__body .fd-menu {
      font-size: inherit; }
  .fd-button-group.--split.--compact {
    font-size: 1rem;
    line-height: 1.42857; }
    .fd-button-group.--split.--compact .fd-popover__body {
      margin-top: 31px; }
    .fd-button-group.--split.--compact [class*="fd-button--"] {
      height: 32px;
      max-height: 32px;
      padding-left: 12px;
      padding-right: 12px; }
    .fd-button-group.--split.--compact [class*="fd-button--"].--more {
      height: 32px;
      max-height: 32px;
      padding-left: 11px;
      padding-right: 11px; }
  .fd-button-group.--split.--xs {
    font-size: 0.85714rem;
    line-height: 1.33333; }
    .fd-button-group.--split.--xs .fd-popover__body {
      margin-top: 23px; }
    .fd-button-group.--split.--xs [class*="fd-button--"] {
      height: 24px;
      max-height: 24px;
      padding-left: 8px;
      padding-right: 8px; }
    .fd-button-group.--split.--xs [class*="fd-button--"].--more {
      height: 24px;
      max-height: 24px;
      padding-left: 7px;
      padding-right: 7px; }
  .fd-button-group.--split.--s {
    font-size: 1rem;
    line-height: 1.42857; }
    .fd-button-group.--split.--s .fd-popover__body {
      margin-top: 27px; }
    .fd-button-group.--split.--s [class*="fd-button--"] {
      height: 28px;
      max-height: 28px;
      padding-left: 8px;
      padding-right: 8px; }
    .fd-button-group.--split.--s [class*="fd-button--"].--more {
      height: 28px;
      max-height: 28px;
      padding-left: 8px;
      padding-right: 8px; }
  .fd-button-group.--split.--l {
    font-size: 1.14286rem;
    line-height: 1.25; }
    .fd-button-group.--split.--l .fd-popover__body {
      margin-top: 39px; }
    .fd-button-group.--split.--l [class*="fd-button--"] {
      height: 40px;
      max-height: 40px;
      padding-left: 20px;
      padding-right: 20px; }
    .fd-button-group.--split.--l [class*="fd-button--"].--more {
      height: 40px;
      max-height: 40px;
      padding-left: 13px;
      padding-right: 13px; }
  .fd-button-group.--split.--xl {
    font-size: 1.14286rem;
    line-height: 1.25; }
    .fd-button-group.--split.--xl .fd-popover__body {
      margin-top: 43px; }
    .fd-button-group.--split.--xl [class*="fd-button--"] {
      height: 44px;
      max-height: 44px;
      padding-left: 24px;
      padding-right: 24px; }
    .fd-button-group.--split.--xl [class*="fd-button--"].--more {
      height: 44px;
      max-height: 44px;
      padding-left: 15px;
      padding-right: 15px; }

[dir='rtl'] .fd-button-group.--split [class*="fd-button--"] {
  border-top-right-radius: 3px;
  border-bottom-right-radius: 3px;
  border-top-left-radius: 0px;
  border-bottom-left-radius: 0px; }
  [dir='rtl'] .fd-button-group.--split [class*="fd-button--"]::before {
    margin-left: 0px; }
  [dir='rtl'] .fd-button-group.--split [class*="fd-button--"].--more {
    border-left: 0px solid #fff;
    border-right: 1px solid #fff;
    border-top-right-radius: 0px;
    border-bottom-right-radius: 0px;
    border-top-left-radius: 3px;
    border-bottom-left-radius: 3px; }

[dir='rtl'] .fd-button-group.--split .fd-popover__body {
  margin-right: -1px;
  margin-left: 0px;
  border-top-left-radius: 3px; }
  [dir='rtl'] .fd-button-group.--split .fd-popover__body .fd-menu__list {
    padding: 0px; }

/*!
.fd-dropdown+()
    .fd-dropdown__control+([disabled])
    .fd-dropdown__menu+()
*/
.fd-dropdown__control {
  background-color: #ffffff;
  border-color: #ACD4ED;
  color: #949499;
  -webkit-box-shadow: none;
          box-shadow: none;
  padding-left: 13px; }
  .fd-dropdown__control.fd-button--l {
    height: 44px;
    max-height: 44px;
    font-size: 16px;
    line-height: 1.28571rem; }
  .fd-dropdown__control:active, .fd-dropdown__control:focus {
    border-color: #0a6ed1; }

.fd-dropdown .fd-menu__item {
  color: #32363a;
  margin: 0px 12px;
  padding: 10px 8px; }
  .fd-dropdown .fd-menu__item:hover {
    background-color: rgba(172, 212, 237, 0.3); }
  .fd-dropdown .fd-menu__item.selected::after {
    font-family: "SAP-icons";
    font-style: normal;
    font-weight: normal;
    text-align: center;
    display: inline-block;
    text-decoration: inherit;
    text-transform: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    speak: none; }
  .fd-dropdown .fd-menu__item.selected:after {
    content: "\e05b";
    margin-top: -5px;
    color: #0a6ed1;
    float: right;
    padding-top: 5px; }

.fd-dropdown.--l .fd-menu {
  font-size: 16px; }
  .fd-dropdown.--l .fd-menu__item {
    padding: 14px 8px; }

[dir='rtl'] .fd-dropdown__control {
  text-align: right;
  padding-right: 13px;
  padding-left: 20px; }
  [dir='rtl'] .fd-dropdown__control:after {
    position: relative;
    float: left;
    top: 7px;
    margin-left: -5px; }

[dir='rtl'] .fd-dropdown .fd-menu__list {
  padding: inherit; }

[dir='rtl'] .fd-dropdown .fd-menu__item.selected:after {
  float: left; }

/*!
.fd-alert+(--warning. --error)
    .fd-alert__close
*/
.fd-alert {
  color: #32363a;
  border: solid 1px #dededf;
  background-color: #ffffff;
  padding: 20px;
  border-radius: 3px;
  min-height: 60px;
  -webkit-box-shadow: 0 12px 20px 0 rgba(0, 0, 0, 0.1), 0 0 4px 0 rgba(0, 0, 0, 0.15);
          box-shadow: 0 12px 20px 0 rgba(0, 0, 0, 0.1), 0 0 4px 0 rgba(0, 0, 0, 0.15);
  font-size: 16px;
  text-align: justify;
  position: relative;
  vertical-align: middle; }
  .fd-alert__close {
    right: 16px;
    top: 8px;
    color: #6f7275;
    width: 9px;
    height: 15px;
    font-size: 14px; }
    .fd-alert__close::before {
      font-family: "SAP-icons";
      font-style: normal;
      font-weight: normal;
      text-align: center;
      display: inline-block;
      text-decoration: inherit;
      text-transform: none;
      text-rendering: optimizeLegibility;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      speak: none; }
    .fd-alert__close::before {
      font-family: "Ariba-icons";
      content: "\eB14";
      font-size: 14px;
      width: 9px;
      height: 15px; }
  .fd-alert .fd-alert--message {
    display: inline-block; }
  .fd-alert--success, .fd-alert--warning, .fd-alert--error {
    border-left-width: 10px;
    padding-left: 26px; }
    .fd-alert--success .fd-alert--message, .fd-alert--warning .fd-alert--message, .fd-alert--error .fd-alert--message {
      padding-left: 52px; }
    .fd-alert--success::before, .fd-alert--warning::before, .fd-alert--error::before {
      font-family: "SAP-icons";
      font-style: normal;
      font-weight: normal;
      text-align: center;
      display: inline-block;
      text-decoration: inherit;
      text-transform: none;
      text-rendering: optimizeLegibility;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      speak: none; }
    .fd-alert--success::before, .fd-alert--warning::before, .fd-alert--error::before {
      font-family: "Ariba-icons";
      font-size: 25px;
      display: inline-block;
      min-height: 100%;
      position: absolute;
      margin-top: -20px;
      top: 50%; }
  .fd-alert--success {
    border-left-color: #359c46;
    border-right-color: #359c46; }
    .fd-alert--success::before {
      content: "\eA19";
      color: #359c46; }
  .fd-alert--warning {
    border-left-color: #f59518; }
    .fd-alert--warning::before {
      content: "\eA9d";
      color: #f59518; }
  .fd-alert--error {
    border-left-color: #CC0000; }
    .fd-alert--error::before {
      content: "\eA9c";
      color: #CC0000; }
  .fd-alert--dismissible {
    padding-right: 50px; }

[dir='rtl'] .fd-alert__close {
  float: left;
  position: unset;
  margin: -13px 0px 0px -34px; }

[dir='rtl'] .fd-alert--dismissible {
  padding-left: 50px;
  padding-right: 20px; }

[dir='rtl'] .fd-alert--success, [dir='rtl'] .fd-alert--warning, [dir='rtl'] .fd-alert--error {
  border-right-width: 6px;
  border-left-width: 0px;
  padding-left: 20px;
  padding-right: 26px; }
  [dir='rtl'] .fd-alert--success .fd-alert--message, [dir='rtl'] .fd-alert--warning .fd-alert--message, [dir='rtl'] .fd-alert--error .fd-alert--message {
    padding-right: 52px;
    padding-left: 0px; }

[dir='rtl'] .fd-alert--success {
  border-right-color: #359c46; }

[dir='rtl'] .fd-alert--warning {
  border-right-color: #f59518; }

[dir='rtl'] .fd-alert--error {
  border-right-color: #CC0000; }

[dir='rtl'] .fd-alert--dismissible {
  padding-right: 20px;
  padding-left: 50px; }

/*!
.fd-modal
    .fd-modal__header
        .fd-form__title
    .fd-form__body
    .fd-form__footer-items
      .fd-modal__button-primary
      .fd-modal__button-secondary
*/
.fd-modal {
  font-size: 14px;
  line-height: 1.42857;
  color: #32363a;
  font-family: '72', -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol;
  max-width: 480px; }
  .fd-modal__content {
    padding: 48px 0px 52px 48px; }
  .fd-modal__header {
    position: relative;
    border-bottom: 0px;
    padding: 0px;
    padding-bottom: 32px; }
  .fd-modal__title {
    font-size: 2.14286rem;
    line-height: 1.2;
    font-weight: 300;
    margin-bottom: 0;
    padding-right: 48px; }
  .fd-modal__close {
    width: 16px;
    height: 16px;
    padding: 0px;
    top: -32px; }
    .fd-modal__close::before {
      font-family: "Ariba-icons";
      font-size: 17px;
      content: "\eB14"; }
  .fd-modal__body {
    padding: 0px;
    padding-right: 48px; }
  .fd-modal__footer {
    border: 0px;
    padding: 56px 48px 0px 0px; }
    .fd-modal__footer button:only-child {
      width: 100%; }
  .fd-modal.--success .fd-modal__content, .fd-modal.--warning .fd-modal__content, .fd-modal.--error .fd-modal__content {
    border-top: 1px solid #359c46;
    border-top-width: 4px; }
  .fd-modal.--success .fd-modal__header::before, .fd-modal.--warning .fd-modal__header::before, .fd-modal.--error .fd-modal__header::before {
    font-family: "SAP-icons";
    font-style: normal;
    font-weight: normal;
    text-align: center;
    display: inline-block;
    text-decoration: inherit;
    text-transform: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    speak: none; }
  .fd-modal.--success .fd-modal__header::before, .fd-modal.--warning .fd-modal__header::before, .fd-modal.--error .fd-modal__header::before {
    font-family: "Ariba-icons";
    font-size: 72px;
    margin-top: -20px;
    margin-left: 35%; }
  .fd-modal.--success .fd-modal__content {
    border-top-color: #359c46; }
  .fd-modal.--success .fd-modal__header::before {
    color: #359c46;
    content: "\eA19"; }
  .fd-modal.--warning .fd-modal__content {
    border-top-color: #f59518; }
  .fd-modal.--warning .fd-modal__header::before {
    color: #f59518;
    content: "\eA9d"; }
  .fd-modal.--error .fd-modal__content {
    border-top-color: #CC0000; }
  .fd-modal.--error .fd-modal__header::before {
    color: #CC0000;
    content: "\eA9c"; }

[dir='rtl'] .fd-modal__close {
  right: 100%;
  margin-right: 6px; }

[dir='rtl'] .fd-modal__footer {
  text-align: left; }

[dir='rtl'] .fd-modal.--success .fd-modal__header::before, [dir='rtl'] .fd-modal.--warning .fd-modal__header::before, [dir='rtl'] .fd-modal.--error .fd-modal__header::before {
  margin-right: 35%;
  padding-right: 48px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
